<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xml:id="M_NZER_Leona_Elisabeth_Der_Einfluss_von_AI_Pair_Programmers_">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Der Einfluss von AI-Pair-Programmers auf die Digital Humanities: Potentiale und Limitationen</title>
                <author>
                    <persName>
                        <surname>Schiller-Stoff</surname>
                        <forename>Sebastian</forename>
                    </persName>
                    <affiliation>Universität Graz, Österreich</affiliation>
                    <email>sebastian.stoff@uni-graz.at</email>
                    <idno type="ORCID">0000-0001-6941-113X</idno>
                </author>
                <author>
                    <persName>
                        <surname>Münzer</surname>
                        <forename>Leona Elisabeth</forename>
                    </persName>
                    <affiliation>Universität Graz, Österreich</affiliation>
                    <email>leona.muenzer@uni-graz.at</email>
                    <idno type="ORCID">0009-0002-7170-8340</idno>
                </author>
                <author>
                    <persName>
                        <surname>Dittmann</surname>
                        <forename>Christina</forename>
                    </persName>
                    <affiliation>Universität Graz, Österreich</affiliation>
                    <email>christina.dittmann@uni-graz.at</email>
                    <idno type="ORCID">0009-0000-7085-3154</idno>
                </author>
                <author>
                    <persName>
                        <surname>Sagadin</surname>
                        <forename>Suzana</forename>
                    </persName>
                    <affiliation>Universität Graz, Österreich</affiliation>
                    <email>suzana.sagadin@uni-graz.at</email>
                </author>
            </titleStmt>
            <editionStmt>
                <edition>
                    <date>2023-06-13T14:32:00Z</date>
                </edition>
            </editionStmt>
            <publicationStmt>
                <publisher>Bielefeld Computational Literary Studies Group</publisher>
                <address>
                    <addrLine>Universität Bielefeld</addrLine>
                    <addrLine>Universitätsstraße 25</addrLine>
                    <addrLine>33615 Bielefeld</addrLine>
                    <addrLine>Deutschland</addrLine>
                </address>
                <publisher>Digital History</publisher>
                <address>
                    <addrLine>Universität Bielefeld</addrLine>
                    <addrLine>Universitätsstraße 25</addrLine>
                    <addrLine>33615 Bielefeld</addrLine>
                    <addrLine>Deutschland</addrLine>
                </address>
                <publisher>Digital Linguistics Lab</publisher>
                <address>
                    <addrLine>Universität Bielefeld</addrLine>
                    <addrLine>Universitätsstraße 25</addrLine>
                    <addrLine>33615 Bielefeld</addrLine>
                    <addrLine>Deutschland</addrLine>
                </address>
            </publicationStmt>
            <sourceDesc>
                <p>Converted from a Word document</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <appInfo>
                <application ident="DHCONVALIDATOR" version="1.22">
                    <label>DHConvalidator</label>
                </application>
            </appInfo>
        </encodingDesc>
        <profileDesc>
            <textClass>
                <keywords scheme="ConfTool" n="category">
                    <term>Paper</term>
                </keywords>
                <keywords scheme="ConfTool" n="subcategory">
                    <term>Vortrag: Theorie, Metareflexion, Positionspapier</term>
                </keywords>
                <keywords scheme="ConfTool" n="keywords">
                    <term>Research-Software-Engineering</term>
                    <term>AI-Pair-Programmers</term>
                    <term>Copilots</term>
                    <term>KI</term>
                    <term>Codingassistenten</term>
                    <term>Digitale Transformation</term>
                </keywords>
                <keywords scheme="ConfTool" n="topics">
                    <term>Programmierung</term>
                    <term>Webentwicklung</term>
                    <term>Forschung</term>
                    <term>Forschungsprozess</term>
                    <term>Software</term>
                    <term>Werkzeuge</term>
                </keywords>
            </textClass>
        </profileDesc>
    </teiHeader>
    <text>
        <body>
            <div type="div1" rend="DH-Heading1">
                <head>Einleitung</head>
                <p>Es steht außer Frage, dass die 
                    <hi rend="italic">“Digitale Evolution”</hi> und deren Konsequenzen nicht mehr aufzuhalten sind (Coester und Pohlmann 2021). Auch die sich im Zuge der 
                    <hi rend="italic">Digitalen Transformation</hi> der Geisteswissenschaften etablierten 
                    <hi rend="italic">Digital Humanities</hi> (kurz: DH) stehen ununterbrochen im Wandel, nicht zuletzt durch den verstärkten Einsatz von 
                    <hi rend="italic">Künstlicher Intelligenz</hi> (Vogeler und Hofeneder 2023). 
                </p>
                <p>Gab es lange Zeit nur einfache Tools zur code completion, sind es mittlerweile sogenannte 
                    <hi rend="italic">AI-Pair-Programmers</hi>, d.h. KI-gestützte, integrierbare Systeme wie GitHub Copilot, das bei seiner Veröffentlichung auf das large language model 
                    <hi rend="italic">Codex</hi> von 
                    <hi rend="italic">OpenAI</hi> basierte (Rothlauf et al. 2021), die in jüngster Zeit Aufmerksamkeit erlangt haben (Zhang et al. 2023). Diese können in IDEs (integrated development environments) integriert werden und so bei diversen Aufgaben unterstützen. 
                    <hi rend="italic">Aber was bieten diese Codingassistenten an?</hi>
                </p>
                <p>Auch auf die Programmiertätigkeiten der DH haben diese Assistenten immer mehr Einfluss: Wir befinden uns durchaus in einem Prozess, der in Zukunft dazu führen könnte, dass derartige Tools zum festen Bestandteil unserer Arbeitsweisen werden. Unsere Disziplin befindet sich also 
                    <hi rend="italic">“Under Construction”</hi> - 
                    <hi rend="italic">aber welche (Forschungs-)Aktivitäten der DH sind wirklich davon betroffen, und inwiefern könnten sich diese verändern? Welche Potenziale gibt es?</hi>
                </p>
            </div>
            <div type="div1" rend="DH-Heading1">
                <head>
                    <hi style="font-size:12pt">Grundlegende Funktionen von AI-Pair-Programmers</hi>
                </head>
                <p>Neben 
                    <hi rend="italic">GitHub Copilot</hi> sind derzeit verschiedene kommerzielle und nichtkommerzielle AI-Pair-Programmers, darunter auch Open-Source-Optionen, verfügbar. Am häufigsten werden diese als Plugins in 
                    <hi rend="italic">Microsofts VS Code</hi> verwendet, jedoch sind diese zunehmend auch in andere IDEs wie den 
                    <hi rend="italic">JetBrains IDEs</hi>, in diesem Fall seit Februar/März 2024, integrierbar (siehe dazu Schiller-Stoff und Münzer 2024) - letztere bieten mittlerweile ihre eigene Infrastruktur 
                    <hi rend="italic">JetBrains AI</hi> an. Die jeweilige Leistung und der Umfang der Möglichkeiten dieser Assistenten ist natürlich von den zugrundeliegenden Daten abhängig, sie bieten aber ähnliche grundlegende Funktionen an (siehe dazu Martin und Schiller-Stoff 2023; Schiller-Stoff und Martin 2024):
                </p>
                <p>Eine der Kernfunktionen ist die automatische Vervollständigung von Code: Mittels 
                    <hi rend="italic">code completion</hi> kann Code automatisch vervollständigt werden, indem auf eigens trainierte Modelle für die Codegenerierung zurückgegriffen wird. Die Vervollständigung liefert kontextbezogene Vorschläge für Codezeilen, Funktionen und ganze Klassen, generiert Boilerplate-Code, der in vielen Projekten wiederkehrende Strukturen wie Initialisierungen, Standardmethoden oder Konfigurationsdateien umfasst. Auch ist es möglich, Dokumentationen, beispielsweise mittels Docstrings und Kommentaren, zu erstellen oder zu vervollständigen. Dies hilft dabei, den Code verständlicher und wartbarer zu machen.
                </p>
                <p>In diesem Fall, explizit Github Copilot betreffend, ermöglichen 
                    <hi rend="italic">Integrierte Prompts,</hi> die mit 
                    <hi rend="italic">/doc, /test, /fix und /simplify</hi> abgerufen werden können, spezifische Aufgaben wie das Generieren von Dokumentationen, das Erstellen und Ausführen von Tests sowie das Beheben von Fehlern und Optimieren von Code (Martin und Schiller-Stoff 2023). Weitere Funktionen sind der 
                    <hi rend="italic">@terminal agent</hi>, der bei der Generierung und Ausführung von terminal commands unterstützen kann. Auch commit messages können generiert, sowie Issues durch die Implementierung der closeIssue() Funktion “als bulk” geschlossen werden (Kerr, Kedasha 2024).
                </p>
                <p>AI-Pair-Programmers können zudem auch beim Refactoring unterstützen, indem sie den bestehenden Code analysieren und Optimierungen vorschlagen, die die Lesbarkeit und Wartbarkeit erhöhen. Auch liefern sie Unterstützung bei der Fehlerbehebung, dem Debugging sowie der Codeoptimierung, indem sie Hinweise zur Optimierung der Effizienz und Performance geben.</p>
                <p>Mittels der integrierten Chatfunktion können Entwickler:innen direkt in ihrer Entwicklungsumgebung Fragen stellen und spezifische Befehle ausführen, sich den Code (davon auch einzelne Stellen) erklären oder zusammenfassen lassen. Somit sind Copilots also nicht nur ein Werkzeug zur Steigerung der Produktivität, sondern auch ein Mittel für eine tiefere, kontextuelle Interpretation des Codes, indem sie zu dessen Verständnis beitragen. </p>
            </div>
            <div type="div1" rend="DH-Heading1">
                <head>
                    <hi style="font-size:12pt">Transformation der Digital Humanities: Auswirkungen auf Forschung und zukünftige Potenziale</hi>
                </head>
                <p>Es stellt sich die Frage welche Bereiche der DH von den Veränderungen durch den Einsatz von Coding-Assistenten<ref n="1" target="ftn1"/> besonders betroffen sind. Beispielsweise könnten jene, die in der 
                    <hi rend="italic">Taxonomy of Digital Research Activities</hi><ref n="2" target="ftn2"/> unter 
                    <hi rend="italic">Creating: Softwareentwicklung</hi> und 
                    <hi rend="italic">Web Development</hi> fallen, genannt werden.
                </p>
                <p>Laut einer Studie von GitHub im Jahr 2022 wurde nachgewiesen, dass der Einsatz von KI-Assistenten in der Softwareentwicklung zu einer Produktivitätssteigerung führte: Programmierer:innen, die unter Einsatz von GitHub Copilot (damals noch nicht allgemein verfügbar) an der Implementierung eines HTTP-Servers arbeiteten, waren im Schnitt etwa 55,8% schneller als ihre Kolleg:innen ohne derartige Hilfe (Peng et al. 2023). Auch in den DH ist von einer gewissen Effizienzsteigerung auszugehen: Die Automatisierung von Routineaufgaben und die Unterstützung bei komplexen Programmierproblemen durch bereits genannte Funktionen ermöglichen es Forschenden in den DH, sich stärker auf die inhaltliche Analyse und Interpretation der Projektdaten zu konzentrieren. Der Vorteil der KI-Assistenten für die Programmierung ergibt sich somit vor allem daraus, dass diese redundante Aufgaben erledigen können (Zhang et al. 2023). Die Annahme eines Focus-Shifts gibt auch eine aktuelle Studie von Hoffmann et al. (Harvard Business School, November 2024) wieder. Aus dieser geht hervor, dass erfahrene Programmierer:innen unter Einsatz von GitHub Copilot ihren Fokus wieder vermehrt auf sogenanntes “
                    <hi rend="italic">core work”</hi> setzen können, sich aber auch mit mehr 
                    <hi rend="italic">“exploratory work”</hi> und der damit einhergehenden Innovation beschäftigen können. Auch Projektmitarbeiter:innen bzw. Manager:innen, die kaum bis nicht (mehr) programmieren, profitieren von diesen Assistenten, da sie sich schneller ins 
                    <hi rend="italic" xml:space="preserve">“core work” </hi>einarbeiten können (Hoffmann et al. 2024).
                </p>
                <p>Derzeit unterstützt der Vorreiter unter den KI-Assistenten GitHub Copilot mehrere Programmiersprachen und Frameworks. Die beste Leistung zeigt sich jedoch bei 
                    <hi rend="italic" xml:space="preserve">C, C++, C#, Go, Java, JavaScript, PHP, Python, Ruby, Rust, Scala, </hi>und 
                    <hi rend="italic">TypeScript</hi> (Anand et al. 2024). Ähnlich sieht es bei anderen Assistenten aus. Diese Sprachen sind durchaus auch für die DH relevant, jedoch gibt es hier noch Potenziale zu sehen: Eine bessere Unterstützung für SQL (Structured Query Language) sowie Abfragesprachen wie SPARQL (SPARQL Protocol and RDF Query Language) und Standards zur Codierung bzw. Beschreibung von Daten wie RDF (Resource Description Framework) könnte Arbeitsprozesse beschleunigen und die Ergebnisse durch Fehlervermeidung optimieren.
                </p>
                <p>Ein weiterer Bereich, der sich durch die Etablierung von generativer KI wie 
                    <hi rend="italic">ChatGPT</hi><ref n="3" target="ftn3"/> grundlegend verändert hat, ist die Lehre. Nun wird auch die Arbeit mit KI-Assistenten schrittweise in den (Programmier-)Unterricht integriert, denn der Einsatz dieser Tools - und somit eine KI-gestützte Programmierung - wird wohl auch in Zukunft von größerer Relevanz sein. Diverse Workshops<ref n="4" target="ftn4"/> bieten auch einer größeren Interessensgemeinschaft Einblicke in diese fortschreitende Entwicklung.
                </p>
            </div>
            <div type="div1" rend="DH-Heading1">
                <head>
                    <hi style="font-size:12pt">Die Integration von KI-Assistenten in die Software der Digital Humanities</hi>
                </head>
                <p>Die Integration von KI-Assistenten in den Tools der DH befindet sich (Stand Juli 2024)  noch im Anfangsstadium. Während größere, kommerzielle Firmen und Unternehmen integrierte KI-Assistenten bereits in ihre Produkte integrieren, gibt es im Bereich der Research Software der DH noch viel Luft nach oben:</p>
                <p>Aktuell werden diese beinahe ausschließlich als Integration in Entwicklungsumgebungen zur Unterstützung beim Programmieren verwendet. Die Integration kostenpflichtiger Tools wie GitHub Copilot wirft sowohl grundlegende Fragen als auch Kostenfragen auf, die Forschende vor Herausforderungen stellen. Zudem muss hinterfragt werden, inwiefern man sich in den DH auf kommerzielle Software stützen möchte. Grundsätzlich gilt: Je freier zugänglich, desto besser. Alternativ stehen mittlerweile auch Open-Source-Assistenten zur Verfügung. Diese sind jedoch häufig weniger intuitiv und verlangen eine intensive Auseinandersetzung mit der Materie.</p>
                <p>Als eine relevante Entwicklung im Bereich der in den DH verwendeten Software kann auch der 
                    <hi rend="italic">Oxygen AI Positron Assistant</hi> genannt werden. Dieses Tool, das bereits im Oktober 2023 veröffentlicht wurde, integriert KI-generierte Inhalte in den Bearbeitungsprozess, indem es Funktionen wie die Verbesserung bestehender Inhalte, Übersetzungen, Fehlerkorrekturen und Vorschläge zur Verbesserung der Lesbarkeit bietet. Problematisch ist wiederum die Tatsache, dass es sich um ein kommerzielles Tool handelt, welches neben der Oxygen-Lizenz für die Benutzung auch einen monatlichen Beitrag verlangt.
                </p>
                <p>Inwiefern und wann sich die Situation des RSE in den DH ändern wird, scheint derzeit aufgrund der Unsicherheit über eine längerfristige Nachhaltigkeit sowie die Leistbarkeit dieser Tools nicht sicher absehbar.</p>
            </div>
            <div type="div1" rend="DH-Heading1">
                <head>Problematik</head>
                <p>Trotz genannter Schwierigkeiten scheinen AI-Pair-Programmers in den DH prävalenter zu werden. Nichtsdestotrotz muss man sich der Limitationen und der mit der Nutzung dieser Tools einhergehenden Problematiken bewusst sein: </p>
                <p>KI-Assistenten werden als eine Art Black Box bezeichnet, da die zugrundeliegenden Daten meist unbekannt sind - Das gilt auch für Open-Source-Modelle. Daraus gehen datenschutzrechtliche Bedenken hervor, wie die Intransparenz der Datensammlung und -verarbeitung.<ref n="5" target="ftn5"/> Außerdem kann dies auch zur unbewussten Reproduktion bestimmter Verzerrungen im generierten Code führen, welche unbeabsichtigte Diskriminierungen verstärken könnten (Rothlauf et al. 2021).
                </p>
                <p>Zwar scheint die allgemeine Performance dieser Tools über der durchschnittlichen Leistung bzw. Programmiergeschwindigkeit eines Menschen zu stehen, jedoch legen diese kaum Wert auf die Vermeidung von 
                    <hi rend="italic">code smells</hi>, d.h. Schwachstellen im Code, die mit der Zeit zu größeren Problemen führen können, sowie die Einhaltung von Konventionen und 
                    <hi rend="italic">best practices</hi> in der Programmierung. Pudari und Ernst kommen in ihrer Studie (2023, preprint) zu dem Schluss, dass GitHub Copilot bei der Programmierung von Python-Code in etwa 92% der Fälle nicht jene Lösungen als erstes vorschlägt, die den Programmier-Konventionen, den sogenannten 
                    <hi rend="italic">programming idioms</hi>, entspricht - Das obwohl diese am häufigsten von Programmierer:innen genutzt werden und deshalb auch in den Trainings-Datenbanken stark vertreten sein müssten (Pudari und Ernst 2023). Die Abweichung von diesen Standards könnte zu ineffizienten, falschen und sogar unsicheren Code führen. Dies erzeuge Schwachstellen und mache Software anfällig für Angriffe: Bei sogenannten “
                    <hi rend="italic">Indirect Prompt-Injections</hi>” wird durch das gezielte Einfügen von “
                    <hi rend="italic">malicious inputs</hi>” in Eingabeaufforderungen KI-Modelle so manipuliert, dass diese unerwünschte und unsichere Ergebnisse liefern. Ein ähnliches Problem ist das “
                    <hi rend="italic">Data- and Model-Poisoning</hi>”, bei welchem die Trainingsdaten (u.a. auf GitHub oder HuggingFace) der KI-Modelle mit falschem und unsicherem Code “vergiftet” werden (Bundesamt für Sicherheit in der Informationstechnik  2024).
                </p>
                <p>Somit erfordert die Korrektur des generierten Codes zusätzlichen Aufwand und nivelliert die Zeitersparnis, die man durch KI-Assistenten scheinbar gewonnen hat. Der Annahme einer wie von Peng et al. statuierten Produktivitätssteigerung stellt sich eine weitere Studie entgegen: 
                    <hi rend="italic">GitClear</hi> (Entwickler:innen des gleichnamigen Tools für die statistische Software-Analyse) analysierte insgesamt 153 Millionen Zeilen GitHub-Code aus dem Zeitraum Januar 2020 bis Dezember 2023 und kam zu der Erkenntnis, dass dessen Qualität seit 2023 kontinuierlich abnahm. Der Grund sei, dass mehr schnell erzeugter und sogenannter "
                    <hi rend="italic">copy-pasted</hi>"-Code auf der Plattform abgelegt wurde. Dabei handelt es sich laut GitClear eben um KI-generierten oder -veränderten Code. Da Pair-Programmers grundsätzlich nicht vorschlagen, Code zu löschen oder an eine andere Stelle des Programms zu bewegen, käme dieser teilweise doppelt in denselben Projekten vor - was Fragen und Probleme in Bezug auf Nachhaltigkeit und Pflegbarkeit von Software aufwirft (GitClear 2024). In letzter Konsequenz könnte dieser Qualitätsverlust auch DH-Projekte, die sich stark auf Programmierarbeit stützen, betreffen.
                </p>
                <p>Technische Probleme sind aber nur ein Aspekt der vielfältigen Herausforderungen, die eine Auseinandersetzung mit den neuesten technologischen Entwicklungen unumgänglich machen. Blindes Vertrauen in oder die komplette Ablehnung von Digitalisierungstools stellen - allgemein sowie in den Geisteswissenschaften - erhebliche Hürden dar. Dies gilt auch für den Einsatz von KI-Programmierhilfen, da beide Extreme sinnvolles Arbeiten mit diesen Technologien behindern können (Coester und Pohlmann 2021).</p>
                <p>Die Etablierung von KI-Assistenten scheint außerdem Einfluss auf die zwischenmenschliche Kommunikationsbereitschaft zu haben: Laut der bereits genannten Studie von Hoffmann et al. (2024) das Verlangen von Kollaboration zwischen Menschen durch die Nutzung von AI-Pair-Programmers zurückzugehen - im Artikel wird dies jedoch als etwas eher Positives gesehen, da damit etwaige “Reibungen” zwischen Projektmitarbeiter:innen umgangen werden (Hoffmann et al. 2024).</p>
                <p>Verlässt man sich also zu sehr auf KI-Assistenten, könnte dies möglicherweise die Aufgabe von gesetzten Standards zur Folge haben. Dazu stellen Chun und Elkins (2023) berechtigterweise die Frage: 
                    <hi rend="italic">“Will we program humanity into our tools, or will we cede our humanity to AI?”</hi> Die verstärkte Integration von Künstlicher Intelligenz wirft außerdem Fragen zur zukünftigen Rolle menschlicher Programmierer:innen auf. Es besteht die Möglichkeit, dass KI die Programmierarbeit in den Digital Humanities vollständig übernehmen könnte. In einem Szenario, in dem KI den Großteil der Arbeit übernimmt, wären traditionelle Programmierkenntnisse weniger gefragt, was bedeutende, derzeit unabsehbare Auswirkungen auf den Arbeitsmarkt und die Ausbildung in den DH haben könnte.
                </p>
                <p>Ein ganz anderer Aspekt reiht sich noch bei den Problematiken ein, die die zunehmende Verbreitung und Nutzung von Künstlicher Intelligenz bzw. Coding-Assistenten mit sich bringt: Durch den hohen Energieverbrauch und die damit verbundenen CO
                    <hi style="font-family:Cambria Math">₂</hi>-Emissionen trägt die Nutzung dieser Tools zur Umweltbelastung bei. Besonders rechenintensive KI-Anwendungen, wie das Training großer Sprachmodelle, erfordern beträchtliche Rechenressourcen, die zumeist aus fossilen Energiequellen gespeist werden (Wang et al. 2024). Der Energieverbrauch durch KI wird sich bis 2030 sogar mehr als verdreifachen (Granskog et al. 2024).
                </p>
            </div>
            <div type="div1" rend="DH-Heading1">
                <head>Fazit und Ausblick</head>
                <p>Der Einfluss informationstechnischer Entwicklungen (Vogeler und Hofeneder 2023) wie der KI-Assistenten auf die Digital Humanities ist nicht zu unterschätzen. Sie bieten erhebliches Potenzial zur Effizienzsteigerung und zur Erleichterung von Routineaufgaben, wodurch sich Forschende stärker auf die inhaltliche Analyse und Interpretation konzentrieren können. Die Einführung dieser Assistenten hat bereits signifikante Veränderungen vor allem in der Softwareentwicklung der DH bewirkt und könnte diese Transformation weiter vorantreiben. Dennoch sind die Herausforderungen und potenziellen Risiken nicht zu ignorieren: Die Abhängigkeit von kommerziellen Anbietern, die Komplexität der Integration in bestehende Systeme sowie die Gefahr der unbewussten Reproduktion von Verzerrungen oder gar gefährlichem Code durch Black-Box-Modelle sind wesentliche Aspekte, die sorgfältig betrachtet werden müssen. Ein weiteres kritisches Thema ist die zukünftige Rolle menschlicher Programmierer:innen in den DH. Während KI-Assistenten viele Aufgaben übernehmen können, bleibt unklar, wie sich dies langfristig auf die Arbeitsweise, die Ausbildung und den Arbeitsmarkt auswirken wird. Wie bereits erwähnt besteht die Gefahr, dass eine übermäßige Abhängigkeit von KI zur Aufgabe etablierter Standards führen könnte - Hier ist nochmals zu erwähnen, dass die von diversen Seiten angepriesene Produktivitätssteigerung wohl doch auch als zweifelhaft angesehen werden kann, und menschliche Expertise, u.a. in Bezug auf data literacy und best practices, immer noch unverzichtbar ist und sein wird: Die Programmierung ist viel mehr als 
                    <hi rend="italic">programming contests</hi> (Pudari und Ernst 2023), und Digital Humanists nicht als “
                    <hi rend="italic">code-monkeys</hi>” zu verstehen, deren Ziel es ist, immer schneller immer mehr Code zu produzieren. Die Digital Humanities stehen vor der Aufgabe, mit diesen technischen Entwicklungen Schritt zu halten, dabei aber gängige Standards zu wahren und die Nachhaltigkeit der DH-Software zu garantieren.
                </p>
                <p>Eine kritische Auseinandersetzung mit derartigen Tools wird demnach unumgänglich sein. Das Bundesamt für Sicherheit in der Informationstechnik in Deutschland hat diesbezüglich Empfehlungen<ref n="6" target="ftn6"/> für den Einsatz von KI-Programmierassistenten herausgegeben, welche auch die Schwächen der Assistenten berücksichtigen. Dieses Bestreben ist ein Schritt in die richtige Richtung, denn AI-Pair-Programmers sind ein “Double-Edged-Sword” (Zhang et al. 2023): Entwickler:innen in den Digital Humanities werden sich schließlich genau überlegen müssen, wo und wann sie KI-Assistenten in Zukunft einsetzen werden.
                </p>
            </div>
        </body>
        <back>
<div type="notes">
<note rend="footnote text" xml:id="ftn1" n="1">
                         Der Begriff "Copilot" wird umgangssprachlich für AI-Pair-Programmers verwendet, ist jedoch stark durch GitHub Copilot geprägt. Angesichts der zahlreichen Alternativen erscheint eine neutrale Bezeichnung angemessener.
                    </note>
<note rend="footnote text" xml:id="ftn2" n="2">
                         TaDiRAH Browser: 
                            <ref target="https://www.tadirah.info/pages/Browser.html">https://www.tadirah.info/pages/Browser.html</ref>
                        
                    </note>
<note rend="footnote text" xml:id="ftn3" n="3">
                        
                            <ref target="https://openai.com/chatgpt/">https://openai.com/chatgpt/</ref>
                        
                    </note>
<note rend="footnote text" xml:id="ftn4" n="4">
                         Siehe dazu die Workshopreihen “AI assistance systems in the digital humanities and research software engineering”, 
                            <ref target="https://zenodo.org/communities/aiassistingdh/records?q=&amp;l=list&amp;p=1&amp;s=10&amp;sort=newest">https://zenodo.org/communities/aiassistingdh/records?q=&amp;l=list&amp;p=1&amp;s=10&amp;sort=newest</ref>; “Angewandte Generative KI in den Digitalen Geisteswissenschaften” der AGKI-DH, 
                            <ref target="https://agki-dh.github.io/index.html">https://agki-dh.github.io/index.html</ref>
                        
                    </note>
<note rend="footnote text" xml:id="ftn5" n="5">
                         Siehe “FAQ zum Thema KI und Datenschutz”: 
                            <ref target="https://www.dsb.gv.at/download-links/FAQ-zum-Thema-KI-und-Datenschutz.html">https://www.dsb.gv.at/download-links/FAQ-zum-Thema-KI-und-Datenschutz.html</ref>.
                        
                    </note>
<note rend="footnote text" xml:id="ftn6" n="6">
                         Siehe dazu “Ai Coding Assistans”, Bundesamt für Sicherheit in der Informationstechnik, 2024, Link: 
                            <ref target="https://www.bsi.bund.de/DE/Service-Navi/Presse/Alle-Meldungen-News/Meldungen/ANSSI_BSI_KI-Programmierassistenten_241004.html?nn=520690">https://www.bsi.bund.de/DE/Service-Navi/Presse/Alle-Meldungen-News/Meldungen/ANSSI_BSI_KI-Programmierassistenten_241004.html?nn=520690</ref>.
                        
                    </note></div>
            <div type="bibliogr">
                <listBibl>
                    <head>Bibliographie</head>
                    <bibl>
                        <hi rend="bold">Anand, Megha, Gordon Hogenson, Amy Nguyen, Beth Harvey, Saisang Cai, Jill Grant, Huaping Yu, Terry G. Lee, J. Martens, Tom FitzMacken</hi>. 2024. “Informationen zu GitHub Copilot-Abschlüsse in Visual Studio - Visual Studio (Windows)”, 22. Mai 2024. 
                        <ref target="https://learn.microsoft.com/de-de/visualstudio/ide/visual-studio-github-copilot-extension?view=vs-2022">https://learn.microsoft.com/de-de/visualstudio/ide/visual-studio-github-copilot-extension?view=vs-2022</ref> (zuletzt zugegriffen am 10. Juli 2024).
                    </bibl>
                    <bibl>
                        <hi rend="bold">Bundesamt für Sicherheit in der Informationstechnik</hi>. 2024. “AI Coding Assistants”. Deutsch-Französische Empfehlungen für den Einsatz von KI-Programmierassistenten. Last updated September 2024. 
                        <ref target="https://www.bsi.bund.de/DE/Service-Navi/Presse/Alle-Meldungen-News/Meldungen/ANSSI_BSI_KI-Programmierassistenten_241004.html?nn=520690">https://www.bsi.bund.de/DE/Service-Navi/Presse/Alle-Meldungen-News/Meldungen/ANSSI_BSI_KI-Programmierassistenten_241004.html?nn=520690</ref>. (zuletzt zugegriffen am 7. November 2024).
                    </bibl>
                    <bibl>
                        <hi rend="bold">Chun, Jon und Katherine Elkins</hi>. 2023. The Crisis of Artificial Intelligence: A New Digital Humanities Curriculum for Human-Centred AI, International Journal of Humanities and Arts Computing 17.2 (2023): 147–167, 
                        <ref target="https://doi.org/10.3366/ijhac.2023.0310">https://doi.org/10.3366/ijhac.2023.0310</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Coester, Ulla, und Norbert Pohlmann</hi>. 2021. „Vertrauen – ein elementarer Aspekt der digitalen Zukunft“. Datenschutz und Datensicherheit - DuD 45 (2): 120–25. 
                        <ref target="https://doi.org/10.1007/s11623-021-1401-x">https://doi.org/10.1007/s11623-021-1401-x</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">GitClear</hi>. 2024 „Coding on Copilot: 2023 Data Suggests Downward Pressure on Code Quality (incl 2024 projections). 
                        <ref target="https://www.gitclear.com/coding_on_copilot_data_shows_ais_downward_pressure_on_code_quality">https://www.gitclear.com/coding_on_copilot_data_shows_ais_downward_pressure_on_code_quality</ref>. (zuletzt zugegriffen am 12. November 2024). 
                    </bibl>
                    <bibl>
                        <hi rend="bold">Granskog, Anna, Sofia von Schantz, Diego Hernandez Diaz, Jesse Noffsinger, Lorenzo Moavero Milanesi, Pankaj Sahcdeva, Arjita Bhan, Michiel Nivard</hi>. 2024. „Unlocking the European AI revolution”. McKinsey. 24. Oktober 2024. 
                        <ref target="https://www.mckinsey.com/industries/electric-power-and-natural-gas/our-insights/the-role-of-power-in-unlocking-the-european-ai-revolution">https://www.mckinsey.com/industries/electric-power-and-natural-gas/our-insights/the-role-of-power-in-unlocking-the-european-ai-revolution</ref>. (zuletzt zugegriffen am 7. November 2024). 
                    </bibl>
                    <bibl>
                        <hi rend="bold">Hoffmann, Manuel, Sam Boysel, Frank Nagle, Sida Peng, und Kevin Xu</hi>. 2024. „Generative AI and the Nature of Work“, November 2024. https://doi.org/10.2139/ssrn.5007084.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Kerr, Kedasha</hi>. 2024. „10 Unexpected Ways to Use GitHub Copilot“. The GitHub Blog (blog). 22. Januar 2024. 
                        <ref target="https://github.blog/2024-01-22-10-unexpected-ways-to-use-github-copilot/">https://github.blog/2024-01-22-10-unexpected-ways-to-use-github-copilot/</ref> (zuletzt zugegriffen am 10. Juli 2024).
                    </bibl>
                    <bibl>
                        <hi rend="bold">Martin, Julia, und Sebastian Schiller-Stoff</hi>. 2023. „Copilot technologies in the digital humanities“. Dezember 7. 
                        <ref target="https://doi.org/10.5281/zenodo.10288101">https://doi.org/10.5281/zenodo.10288101</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Pudari, Rohith, und Neil A. Ernst</hi>. 2023. „From Copilot to Pilot: Towards AI Supported Software Development“. arXiv. 
                        <ref target="https://doi.org/10.48550/arXiv.2303.04142">https://doi.org/10.48550/arXiv.2303.04142</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Peng, Sida, Eirini Kalliamvakou, Peter Cihon, und Mert Demirer</hi>. 2023. „The Impact of AI on Developer Productivity: Evidence from GitHub Copilot“. arXiv. 13. Februar 2024. 
                        <ref target="http://arxiv.org/abs/2302.06590">http://arxiv.org/abs/2302.06590</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Rothlauf, Franz, Dominik Sobania und Martin Briesch</hi>. 2021. „Choose Your Programming Copilot: A Comparison of the Program Synthesis Performance of GitHub Copilot and Genetic Programming“. arXiv (Cornell University), November. 
                        <ref target="https://www.academia.edu/118312983/Choose_Your_Programming_Copilot_A_Comparison_of_the_Program_Synthesis_Performance_of_GitHub_Copilot_and_Genetic_Programming">https://www.academia.edu/118312983/Choose_Your_Programming_Copilot_A_Comparison_of_the_Program_Synthesis_Performance_of_GitHub_Copilot_and_Genetic_Programming</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Schiller-Stoff, Sebastian, und Julia Martin</hi>. 2024. „Legacy Code and Copilot Technologies: AI-Supported Software Maintenance“. Januar 22. 
                        <ref target="https://doi.org/10.5281/zenodo.10550479">https://doi.org/10.5281/zenodo.10550479</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Schiller-Stoff, Sebastian, und Leona Elisabeth Münzer</hi>. 2024. „IDE-Integration of GitHub Copilot: Jetbrains IDEs“. Mai 15. 
                        <ref target="https://doi.org/10.5281/zenodo.11196383">https://doi.org/10.5281/zenodo.11196383</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Vogeler, Georg, und Philipp Hofeneder</hi>. 2023. „Die digitale Transformation der österreichischen Geisteswissenschaften und ihre Herausforderungen für die Zukunft: Strukturelle Perspektiven für die Integration von Datenwissenschaften, maschinellem Lernen und künstlicher Intelligenz“. Zeitschrift für Hochschulentwicklung 18 (Sonderheft Forschung): 141–162. 
                        <ref target="https://doi.org/10.21240/zfhe/SH-F/09">https://doi.org/10.21240/zfhe/SH-F/09</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Wang, Qiang, Yuanfan Li, und Rongrong Li</hi>. 2024. „Ecological footprints, carbon emissions, and energy transitions: the impact of artificial intelligence (AI)“. Humanities and Social Sciences Communications 11, 14. August 2024. 
                        <ref target="https://doi.org/10.1057/s41599-024-03520-5">https://doi.org/10.1057/s41599-024-03520-5</ref>.
                    </bibl>
                    <bibl>
                        <hi rend="bold">Zhang, Beiqi, Peng Liang, Xiyu Zhou, Aakash Ahmad, und Muhammad Waseem</hi>. 2023. Practices and Challenges of Using GitHub Copilot: An Empirical Study. 
                        <ref target="https://doi.org/10.18293/SEKE2023-077">https://doi.org/10.18293/SEKE2023-077</ref>.
                    </bibl>
                </listBibl>
            </div>
        </back>
    </text>
</TEI>
